/*This tracking function still has problems.  It doesn't perfectly track the color 
unless the color is close to the center of the camera.  Otherwise there's nothing to keep the
servo from continuing to turn to its limit if the object is on one side or the other.*/
#include <kipr/botball.h>
int green = 0;

int main(){
    camera_track(green,3);
    return 0;
}

//function definitions
//camera_track takes two arguments:  a color channel, and a servo port.
void camera_track(channel,servo_port){ 
    enable_servos();								//activate servos
    camera_open();									//turn on camera
    int servo_pos = 1000;							//set variable to center point of servo
    set_servo_position(servo_port,servo_pos);		//move servo to center position
    while(1){										//loop endlessly
     camera_update();								//refresh image
        if(get_object_count(channel) > 0){			//am I seeing this color?
            
          if( get_object_center_x(channel,0)>80){ 	//if I'm seeing the color, and it is on my right
            servo_pos = servo_pos - 50;				//change the servo_pos variable 
            set_servo_position(servo_port,servo_pos); //reset the servo position
            printf("servo pos = %d\n", servo_pos);		//print current servo_pos value
            msleep(10);									//pause 10ms
              if(servo_pos < 300){						//sets a bottom limit for the servo_pos
                    servo_pos = 300;
                }
        }
            if( get_object_center_x(channel,0)<80){ //if I'm seeing the color, and it is on my left
            servo_pos = servo_pos + 50;				//change the servo_pos variable 
            set_servo_position(servo_port,servo_pos);//reset the servo position
            printf("servo pos = %d\n", servo_pos);	//print current servo_pos value
            msleep(10);									//pause 10ms
                if(servo_pos > 1700){				//sets a top limit for the servo_pos
                    servo_pos = 1700;
                }
        }
      }
     else{											//otherwise print color not detected
            printf("color not detected\n");
        }
    }
 }
